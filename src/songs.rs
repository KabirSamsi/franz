/*  For now, just AST representations of what `franz-programs/<song>.fz`
should look like after parsing and full AST simplification. */

use crate::{
    ast,
    ast::{Accidental::*, BaseNoteLen::*, BasePitch::*}
};

/// Generates a [`crate::ast::NoteComp`] through a comma-separated list of
/// `[crate::ast::Note]`s.
macro_rules! notes {
    ($(($p1:expr, $p2:expr)),* $(,)?) => {
        $crate::ast::NoteComp::Phrase(vec![
            $($crate::ast::NoteComp::Note(($p1, $p2))),*
        ])
    };
}

pub fn innocent() -> ast::NoteComp {
    notes![
        ((C, Natural, 4), (Eighth, 0)),
        ((D, Natural, 4), (Eighth, 0)),
        ((E, Flat, 4), (Qtr, 1)),
        ((D, Natural, 4), (Eighth, 0)),
        ((E, Flat, 4), (Qtr, 0)),
        ((G, Natural, 4), (Qtr, 0)),
        ((D, Natural, 4), (Half, 1)),
        ((G, Natural, 3), (Qtr, 0)),
        ((C, Natural, 4), (Qtr, 1)),
        ((B, Flat, 3), (Eighth, 0)),
        ((C, Natural, 4), (Qtr, 0)),
        ((E, Flat, 4), (Qtr, 0)),
        ((B, Flat, 3), (Half, 1)),
        ((G, Natural, 3), (Qtr, 0)),
        ((A, Flat, 3), (Qtr, 1)),
        ((G, Natural, 3), (Eighth, 0)),
        ((A, Flat, 3), (Qtr, 0)),
        ((E, Flat, 4), (Qtr, 0)),
        ((G, Natural, 3), (Half, 1)),
        ((E, Flat, 4), (Qtr, 0)),
        ((D, Natural, 4), (Qtr, 1)),
        ((A, Natural, 3), (Eighth, 0)),
        ((A, Natural, 3), (Qtr, 0)),
        ((D, Natural, 4), (Qtr, 0)),
        ((D, Natural, 4), (Half, 1)),
        ((C, Natural, 4), (Eighth, 0)),
        ((D, Natural, 4), (Eighth, 0)),
        ((E, Flat, 4), (Qtr, 1)),
        ((D, Natural, 4), (Eighth, 0)),
        ((E, Flat, 4), (Qtr, 0)),
        ((G, Natural, 4), (Qtr, 0)),
        ((D, Natural, 4), (Half, 1)),
        ((G, Natural, 3), (Qtr, 0)),
        ((C, Natural, 4), (Qtr, 1)),
        ((B, Flat, 3), (Eighth, 0)),
        ((C, Natural, 4), (Qtr, 0)),
        ((E, Flat, 4), (Qtr, 0)),
        ((B, Flat, 3), (Half, 1)),
        ((G, Natural, 3), (Qtr, 0)),
        ((A, Flat, 3), (Qtr, 0)),
        ((E, Flat, 4), (Eighth, 0)),
        ((D, Natural, 4), (Qtr, 1)),
        ((E, Flat, 4), (Qtr, 0)),
        ((F, Natural, 4), (Qtr, 0)),
        ((G, Natural, 4), (Eighth, 0)),
        ((E, Flat, 4), (Eighth, 0)),
        ((E, Flat, 4), (Half, 0)),
        ((E, Flat, 4), (Eighth, 0)),
        ((D, Natural, 4), (Eighth, 0)),
        ((C, Natural, 4), (Qtr, 0)),
        ((D, Natural, 4), (Qtr, 0)),
        ((B, Natural, 3), (Qtr, 0)),
        ((C, Natural, 4), (Half, 1)),
        ((E, Flat, 4), (Eighth, 0)),
        ((F, Natural, 4), (Eighth, 0)),
        ((G, Natural, 4), (Qtr, 1)),
        ((F, Natural, 4), (Eighth, 0)),
        ((G, Natural, 4), (Qtr, 0)),
        ((B, Flat, 4), (Qtr, 0)),
        ((F, Natural, 4), (Half, 1)),
        ((B, Flat, 3), (Qtr, 0)),
        ((E, Flat, 4), (Qtr, 1)),
        ((D, Natural, 4), (Eighth, 0)),
        ((E, Flat, 4), (Qtr, 0)),
        ((G, Natural, 4), (Qtr, 0)),
        ((D, Natural, 4), (Half, 0)),
        ((C, Natural, 4), (Eighth, 0)),
        ((D, Natural, 4), (Eighth, 0)),
        ((E, Flat, 4), (Qtr, 0)),
        ((D, Natural, 4), (Eighth, 0)),
        ((E, Flat, 4), (Eighth, 0)),
        ((F, Natural, 4), (Qtr, 0)),
        ((E, Flat, 4), (Qtr, 1)),
        ((B, Flat, 3), (Eighth, 0)),
        ((B, Flat, 3), (Half, 0)),
        ((A, Flat, 4), (Qtr, 0)),
        ((G, Natural, 4), (Qtr, 0)),
        ((F, Natural, 4), (Qtr, 0)),
        ((E, Flat, 4), (Qtr, 0)),
        ((G, Natural, 4), (Whole, 0)),
        ((C, Natural, 5), (Half, 0)),
        ((B, Flat, 4), (Half, 0)),
        ((G, Natural, 4), (Qtr, 0)),
        ((F, Natural, 4), (Eighth, 0)),
        ((E, Flat, 4), (Eighth, 0)),
        ((E, Flat, 4), (Half, 0)),
        ((F, Natural, 4), (Qtr, 0)),
        ((E, Flat, 4), (Eighth, 0)),
        ((F, Natural, 4), (Qtr, 1)),
        ((B, Flat, 4), (Qtr, 0)),
        ((G, Natural, 4), (Whole, 0)),
        ((C, Natural, 5), (Half, 0)),
        ((B, Flat, 4), (Half, 0)),
        ((G, Natural, 4), (Qtr, 0)),
        ((F, Natural, 4), (Eighth, 0)),
        ((E, Flat, 4), (Eighth, 0)),
        ((E, Flat, 4), (Half, 0)),
        ((F, Natural, 4), (Qtr, 0)),
        ((E, Flat, 4), (Eighth, 0)),
        ((F, Natural, 4), (Qtr, 1)),
        ((D, Natural, 4), (Qtr, 0)),
        ((C, Natural, 4), (Whole, 0)),
        ((C, Natural, 4), (Eighth, 0)),
        ((D, Natural, 4), (Eighth, 0)),
        ((E, Flat, 4), (Qtr, 1)),
        ((D, Natural, 4), (Eighth, 0)),
        ((E, Flat, 4), (Qtr, 0)),
        ((G, Natural, 4), (Qtr, 0)),
        ((D, Natural, 4), (Half, 1)),
        ((G, Natural, 3), (Qtr, 0)),
        ((C, Natural, 4), (Qtr, 1)),
        ((B, Flat, 3), (Eighth, 0)),
        ((C, Natural, 4), (Qtr, 0)),
        ((E, Flat, 4), (Qtr, 0)),
        ((B, Flat, 3), (Half, 1)),
        ((G, Natural, 3), (Qtr, 0)),
        ((A, Flat, 3), (Qtr, 1)),
        ((G, Natural, 3), (Eighth, 0)),
        ((A, Flat, 3), (Qtr, 0)),
        ((E, Flat, 4), (Qtr, 0)),
        ((G, Natural, 3), (Half, 1)),
        ((E, Flat, 4), (Qtr, 0)),
        ((D, Natural, 4), (Qtr, 1)),
        ((A, Natural, 3), (Eighth, 0)),
        ((A, Natural, 3), (Qtr, 0)),
        ((D, Natural, 4), (Qtr, 0)),
        ((D, Natural, 4), (Half, 1)),
        ((C, Natural, 4), (Eighth, 0)),
        ((D, Natural, 4), (Eighth, 0)),
        ((E, Flat, 4), (Qtr, 1)),
        ((D, Natural, 4), (Eighth, 0)),
        ((E, Flat, 4), (Qtr, 0)),
        ((G, Natural, 4), (Qtr, 0)),
        ((D, Natural, 4), (Half, 1)),
        ((G, Natural, 3), (Qtr, 0)),
        ((C, Natural, 4), (Qtr, 1)),
        ((B, Flat, 3), (Eighth, 0)),
        ((C, Natural, 4), (Qtr, 0)),
        ((E, Flat, 4), (Qtr, 0)),
        ((B, Flat, 3), (Half, 1)),
        ((G, Natural, 3), (Qtr, 0)),
        ((A, Flat, 3), (Qtr, 0)),
        ((E, Flat, 4), (Eighth, 0)),
        ((D, Natural, 4), (Qtr, 1)),
        ((E, Flat, 4), (Qtr, 0)),
        ((F, Natural, 4), (Qtr, 0)),
        ((G, Natural, 4), (Eighth, 0)),
        ((E, Flat, 4), (Eighth, 0)),
        ((E, Flat, 4), (Half, 0)),
        ((E, Flat, 4), (Eighth, 0)),
        ((D, Natural, 4), (Eighth, 0)),
        ((C, Natural, 4), (Qtr, 0)),
        ((D, Natural, 4), (Qtr, 0)),
        ((B, Natural, 3), (Qtr, 0)),
        ((C, Natural, 4), (Half, 1))
    ]
}

pub fn anthem() -> ast::NoteComp {
    notes![
        ((F, Natural, 4), (Eighth, 1)),
        ((D, Natural, 4), (Sixteenth, 0)),
        ((B, Flat, 3), (Qtr, 0)),
        ((D, Natural, 4), (Qtr, 0)),
        ((F, Natural, 4), (Qtr, 0)),
        ((B, Flat, 4), (Half, 0)),
        ((D, Natural, 5), (Eighth, 1)),
        ((C, Natural, 5), (Sixteenth, 0)),
        ((B, Flat, 4), (Qtr, 0)),
        ((D, Natural, 4), (Qtr, 0)),
        ((E, Natural, 4), (Qtr, 0)),
        ((F, Natural, 4), (Half, 0)),
        ((F, Natural, 4), (Eighth, 0)),
        ((F, Natural, 4), (Eighth, 0)),
        ((D, Natural, 5), (Qtr, 1)),
        ((C, Natural, 5), (Eighth, 0)),
        ((B, Flat, 4), (Qtr, 0)),
        ((A, Natural, 4), (Half, 0)),
        ((G, Natural, 4), (Eighth, 1)),
        ((A, Natural, 4), (Sixteenth, 0)),
        ((B, Flat, 4), (Qtr, 0)),
        ((B, Flat, 4), (Qtr, 0)),
        ((F, Natural, 4), (Qtr, 0)),
        ((D, Natural, 4), (Qtr, 0)),
        ((B, Flat, 3), (Qtr, 0)),
        ((F, Natural, 4), (Eighth, 1)),
        ((D, Natural, 4), (Sixteenth, 0)),
        ((B, Flat, 3), (Qtr, 0)),
        ((D, Natural, 4), (Qtr, 0)),
        ((F, Natural, 4), (Qtr, 0)),
        ((B, Flat, 4), (Half, 0)),
        ((D, Natural, 5), (Eighth, 1)),
        ((C, Natural, 5), (Sixteenth, 0)),
        ((B, Flat, 4), (Qtr, 0)),
        ((D, Natural, 4), (Qtr, 0)),
        ((E, Natural, 4), (Qtr, 0)),
        ((F, Natural, 4), (Half, 0)),
        ((F, Natural, 4), (Eighth, 0)),
        ((F, Natural, 4), (Eighth, 0)),
        ((D, Natural, 5), (Qtr, 1)),
        ((C, Natural, 5), (Eighth, 0)),
        ((B, Flat, 4), (Qtr, 0)),
        ((A, Natural, 4), (Half, 0)),
        ((G, Natural, 4), (Eighth, 1)),
        ((A, Natural, 4), (Sixteenth, 0)),
        ((B, Flat, 4), (Qtr, 0)),
        ((B, Flat, 4), (Qtr, 0)),
        ((F, Natural, 4), (Qtr, 0)),
        ((D, Natural, 4), (Qtr, 0)),
        ((B, Flat, 3), (Qtr, 0)),
        ((D, Natural, 5), (Eighth, 1)),
        ((D, Natural, 5), (Sixteenth, 0)),
        ((D, Natural, 5), (Qtr, 0)),
        ((E, Flat, 5), (Qtr, 0)),
        ((F, Natural, 5), (Qtr, 0)),
        ((F, Natural, 5), (Half, 0)),
        ((E, Flat, 5), (Eighth, 1)),
        ((D, Natural, 5), (Sixteenth, 0)),
        ((C, Natural, 5), (Qtr, 0)),
        ((D, Natural, 5), (Qtr, 0)),
        ((E, Flat, 5), (Qtr, 0)),
        ((E, Flat, 5), (Half, 0)),
        ((E, Flat, 5), (Qtr, 0)),
        ((D, Natural, 5), (Qtr, 1)),
        ((C, Natural, 5), (Eighth, 0)),
        ((B, Flat, 4), (Qtr, 0)),
        ((A, Natural, 4), (Half, 0)),
        ((G, Natural, 4), (Eighth, 0)),
        ((A, Natural, 4), (Eighth, 1)),
        ((B, Flat, 4), (Qtr, 0)),
        ((D, Natural, 4), (Qtr, 0)),
        ((E, Natural, 4), (Qtr, 0)),
        ((F, Natural, 4), (Half, 0)),
        ((F, Natural, 4), (Qtr, 0)),
        ((B, Flat, 4), (Qtr, 0)),
        ((B, Flat, 4), (Qtr, 0)),
        ((B, Flat, 4), (Eighth, 0)),
        ((A, Natural, 4), (Eighth, 0)),
        ((G, Natural, 4), (Qtr, 0)),
        ((G, Natural, 4), (Qtr, 0)),
        ((G, Natural, 4), (Qtr, 0)),
        ((C, Natural, 5), (Qtr, 0)),
        ((E, Flat, 5), (Eighth, 0)),
        ((D, Natural, 5), (Eighth, 0)),
        ((C, Natural, 5), (Eighth, 0)),
        ((B, Flat, 4), (Eighth, 0)),
        ((B, Flat, 4), (Qtr, 0)),
        ((A, Natural, 4), (Qtr, 0)),
        ((F, Natural, 4), (Eighth, 0)),
        ((F, Natural, 4), (Eighth, 0)),
        ((B, Flat, 4), (Qtr, 1)),
        ((C, Natural, 5), (Eighth, 0)),
        ((D, Natural, 5), (Eighth, 0)),
        ((E, Flat, 5), (Eighth, 0)),
        ((F, Natural, 5), (Half, 0)),
        ((B, Flat, 4), (Eighth, 0)),
        ((C, Natural, 5), (Eighth, 0)),
        ((D, Natural, 5), (Qtr, 1)),
        ((E, Flat, 5), (Eighth, 0)),
        ((C, Natural, 5), (Qtr, 0)),
        ((B, Flat, 4), (Whole, 0)),
    ]
}

pub fn apprasionata() -> ast::NoteComp {
    notes![
        ((C, Natural, 3), (Qtr, 0)),
        ((F, Natural, 3), (Qtr, 0)),
        ((A, Flat, 3), (Qtr, 0)),
        ((C, Natural, 4), (Qtr, 0)),
        ((F, Natural, 4), (Qtr, 0)),
        ((A, Flat, 4), (Qtr, 1)),
        ((G, Natural, 4), (Sixteenth, 0)),
        ((F, Natural, 4), (Sixteenth, 0)),
        ((E, Natural, 4), (Sixteenth, 0)),
        ((F, Natural, 4), (Half, 0)),
        ((G, Natural, 3), (Qtr, 0)),
        ((C, Natural, 4), (Qtr, 0)),
        ((E, Natural, 4), (Qtr, 0)),
        ((G, Natural, 4), (Qtr, 0)),
        ((B, Flat, 4), (Qtr, 1)),
        ((A, Flat, 4), (Sixteenth, 0)),
        ((G, Natural, 4), (Sixteenth, 0)),
        ((F, Natural, 4), (Sixteenth, 0)),
        ((G, Natural, 4), (Half, 0)),
        ((A, Flat, 4), (Qtr, 1)),
        ((G, Natural, 4), (Sixteenth, 0)),
        ((F, Natural, 4), (Sixteenth, 0)),
        ((E, Natural, 4), (Sixteenth, 0)),
        ((F, Natural, 4), (Half, 0)),
        ((B, Flat, 4), (Qtr, 1)),
        ((A, Flat, 4), (Sixteenth, 0)),
        ((G, Natural, 4), (Sixteenth, 0)),
        ((F, Natural, 4), (Sixteenth, 0)),
        ((G, Natural, 4), (Half, 0)),
        ((C, Natural, 5), (Half, 0)),
        ((B, Flat, 4), (Eighth, 0)),
        ((A, Flat, 4), (Eighth, 0)),
        ((G, Natural, 4), (Eighth, 0)),
        ((F, Natural, 4), (Eighth, 1)),
        ((E, Natural, 4), (Sixteenth, 0)),
        ((F, Natural, 4), (Sixteenth, 0)),
        ((G, Natural, 4), (Sixteenth, 0)),
        ((F, Natural, 4), (Qtr, 1)),
        ((E, Natural, 4), (Half, 0)),
    ]
}
